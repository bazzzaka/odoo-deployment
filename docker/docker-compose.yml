services:
  db:
    image: postgres:15-alpine
    container_name: odoo-db
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ../data/db:/var/lib/postgresql/data/pgdata:z
    restart: always
    networks:
      - odoo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  odoo:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      healthcheck:
        test: ["CMD", "python3.12", "--version"]
        interval: 30s
        timeout: 10s
        retries: 3
    container_name: odoo-app
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8069:8069"
      - "8072:8072"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - HOST=db
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    volumes:
      - ../data/odoo:/var/lib/odoo:z
      - ../addons:/mnt/extra-addons:z
      - ../config/odoo.conf:/etc/odoo/odoo.conf:ro
    restart: always
    networks:
      - odoo-network

  nginx:
    image: nginx:alpine
    container_name: odoo-nginx
    depends_on:
      - odoo
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../config/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ../logs/nginx:/var/log/nginx
      - ../data/nginx/certbot/conf:/etc/letsencrypt
      - ../data/nginx/certbot/www:/var/www/certbot
    restart: always
    networks:
      - odoo-network

networks:
  odoo-network:
    external: true